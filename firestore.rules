rules_version = '2';
service cloud.firestore {
  function notUpdating(field) {
     return !(field in request.resource.data)
            || resource.data[field] == request.resource.data[field];
  }
  
  function onlyUpdating(field) {
     return request.resource.data.diff(resource.data).affectedKeys().hasOnly([field]);
  }
  
  function isAdmin(database) {
    return request.auth.uid != null 
           && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.admin == true;
  }

  match /databases/{database}/documents {
    match /users/{user} {
      allow read;
      allow delete: if request.auth.uid == user;
      allow write:  if request.auth.uid == user
                    && notUpdating("admin");
    }
    match /events/{event} {
      allow read:   if request.auth != null;
      allow delete: if isAdmin(database);
      allow write:  if isAdmin(database)
                    || (request.auth != null && onlyUpdating("shifts"));
    }
    match /text/{doc} {
      allow read;
      allow write: if isAdmin(database);
    }
  }
}
